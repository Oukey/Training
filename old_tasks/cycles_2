print('Задаеие №9.5.1')
for i in range(11):  # запустить цикл на 10 строчек
    if i <= 5:
        print('* ' * i)  # В каждой строке количество звездочек == номеру строки
    if i > 5:  # с шестой строки вступают изменения...
        print('* ' * (10 - i))  # ... количество звездочек уменьшить на 1
print('_' * 20)  # Оо Приятно удивлен - получилось)

print('Задание №9.5.2')
'''
9.5.2. Напишите программу, которая подсчитывает и выводит количество чисел между 100 и 400,
которые нацело делятся на 7.
'''
sum = 0  # сумма чисел
n = 0  # количесвто чисел
for i in range(100, 401):  # запустить цикл перебора значений от 100 до 400
    if i % 7 == 0:  # если число из диапазона кратно 7...
        n += 1  # увеличить счетчик чисел на 1
        sum = sum + i  # увеличить сумму на значение числа
print('Сумма чисел, кратных 7 = ', sum)
print('Количество этих чисел = ', n)
print('_' * 20)

print('Задание №9.5.3')
for i in range(1, 8):  # для i в диапазоне от 1 до 7
    if i == 1 or i == 7:  # условие для 1 и 7 строчек
        print('*' * 5)
    elif i == 4:  # условие для 4 строчки
        print('*' * 4)
    else:  # для остальных
        print('*')
print('_' * 20)

print('Задание №9.5.4')
'''
Хакер сканирует роутеры Cisco на наличие уязвимости CVE-2018-0171. Как только такая уязвимость будет обнаружена,
он грузит в корпоративную сеть свой руткит -- профит!
Ваша программа-сканер получает на вход число -- количество роутеров. Далее она вводит коды уязвимостей (целые числа),
и если код равен 171, программа должна завершиться и вывести порядковый номер роутера, начиная с 1.
Если уязвимостей не найдено, надо проинформировать об этом.
Например, на входе будут числа
3 128 171 256
Программа должна вывести сообщение в духе "2-й роутер уязвим".
'''
# создание списка роутеров. Сборная солянка из сети

from random import sample

n_rou = int(input('Укажите количество роутеров: '))  # ввод количества роутеров
n_err = int(171)  # Искомый код уязвимости
err_list = sample(range(100, 201), n_rou)  # генерация списка кодов ошибок роутеров в указанном количестве
n = 0  # счетчик для определения номера роутера
print(err_list)  # вывести на экран сгенерированный список

for i in err_list:  # для каждого значения в списке уязвимости роутеров
    n += 1  # подсчитывай количество перебранных значений
    if (i == n_err):  # если значение совпадает с искомым кодом уязвимости...
        print('Уязвимость найдена!', n, '-й роутер уязвим')  # выведи на экран сообщение и номер значения
        break  # останови цикл
    elif (n >= n_rou and i != n_err):  # если словарь перебран и код уязвимости не найден...
        print('Уязвимости не найдено, рекомендуется расширить поиск')  # выведи на экран сообщение
print('_' * 20)

print('Задание №9.5.5')
'''
ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo
oooo
oooo
oooo
ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo
             oooo
             oooo
             oooo
ooooooooooooooooo
ooooooooooooooooo
ooooooooooooooooo
'''
for i in range(1, 16):  # циклом создай 15 строк
    if (i == 4 or i == 5 or i == 6):  # для строк 4, 5, 6 выведи на экран ...
        print('o' * 4)
    elif (i == 10 or i == 11 or i == 12):  # для строк 10, 11, 12 выведи на экран ...
        print(' ' * 13 + 'o' * 4)
    else:  # для остальных выведи на экран ...
        print('o' * 17)
print('_' * 20)

print('Задание №9.5.6')
'''
9.5.6. Найдите наибольший общий делитель (НОД) двух целых чисел X и Y.
НОД -- это максимальное число, на которое делится без остатка и X, и Y.
'''
num_X = int(input('Введите первое число: '))
num_Y = int(input('Введите второе число: '))
while num_X != 0 and num_Y != 0:  # выполни цикд до тех пор пока значения переменных не равно 0
    if (num_X > num_Y):  # если первое число больше второго...
        num_X %= num_Y  # раздели первое число по модулю на второе
    else:  # иначе (если второе число больше первого) выполни...
        num_Y %= num_X  # деление по модулю второго числа на первое
print('Наибольший общий делитель: ', num_X + num_Y)
print('_' * 20)
